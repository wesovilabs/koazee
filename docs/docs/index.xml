<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Documentation on Koazee</title>
    <link>http://wesovilabs.com/koazee/docs/</link>
    <description>Recent content in Documentation on Koazee</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="http://wesovilabs.com/koazee/docs/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>stream.First</title>
      <link>http://wesovilabs.com/koazee/docs/first/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/first/</guid>
      <description>Function signature func First() (out output)
Arguments None
Output    Name Type Description     output stream.output It contains both value and error   
Errors    Type Message     err.items-nil It can not be taken an element from a nil stream   err.items-nil It can not be taken an element from an empty stream    Examples  Numbers   Pointers    ppackage mainimport (&amp;#34;fmt&amp;#34;&amp;#34;github.</description>
    </item>
    
    <item>
      <title>stream.Last</title>
      <link>http://wesovilabs.com/koazee/docs/last/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/last/</guid>
      <description>Function signature func Last() (out output)
Arguments None
Output    Name Type Description     output stream.output It contains both value and error   
Errors    Type Message     err.items-nil It can not be taken an element from a nil stream   err.items-nil It can not be taken an element from an empty stream    Examples  Numbers   Pointers    ppackage mainimport (&amp;#34;fmt&amp;#34;&amp;#34;github.</description>
    </item>
    
    <item>
      <title>stream.At</title>
      <link>http://wesovilabs.com/koazee/docs/at/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/at/</guid>
      <description>Function signature func At(index int) (out output)
Arguments    Name Type Description     index int Index in the stream, from 0-len(stream)-1   
Output    Name Type Description     output stream.output It contains both value and error   
Errors    Type Message     err.items-nil It can not be taken an element from a nil stream   err.</description>
    </item>
    
    <item>
      <title>stream.Add</title>
      <link>http://wesovilabs.com/koazee/docs/add/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/add/</guid>
      <description>Function signature func Add(item interface{}) (stream S)
Arguments    Name Type Description     item Same type of elements in the stream New item to be added into the stream   
Output    Name Type Description     stream koazee.S It returns the stream modified by the current operation   
Errors    Type Message     err.</description>
    </item>
    
    <item>
      <title>stream.Drop</title>
      <link>http://wesovilabs.com/koazee/docs/drop/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/drop/</guid>
      <description>Function signature func Drop(item interface{}) (stream S) Arguments    Name Type Description     item Same type of elements in the stream Element to be dropped from the stream   
Output    Name Type Description     stream koazee.S It returns the stream modified by the current operation   
Errors    Type Message     err.</description>
    </item>
    
    <item>
      <title>stream.Contains</title>
      <link>http://wesovilabs.com/koazee/docs/contains/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/contains/</guid>
      <description>Function signature func Contains(item interface{}) (found bool,err *errors.Error)
Arguments    Name Type Description     item Same type of elements in the stream Item to be searched in the stream   
Output    Name Type Description     found bool Returns true if element is found and false if not   err *errors.Error Returns nil when the operation was fine and error when something didn&amp;rsquo;t work</description>
    </item>
    
    <item>
      <title>stream.Count</title>
      <link>http://wesovilabs.com/koazee/docs/count/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/count/</guid>
      <description>Function signature func Count() (total int,err *errors.Error)
Arguments None
Output    Name Type Description     total int Number of elements in the stream   err *errors.Error Returns nil when the operation was fine and error when something didn&amp;rsquo;t work   
Errors    Type Message     err.items-nil Count of a nil stream is not permitted  Examples  Numbers   Pointers    package mainimport (&amp;#34;fmt&amp;#34;&amp;#34;github.</description>
    </item>
    
    <item>
      <title>stream.Filter</title>
      <link>http://wesovilabs.com/koazee/docs/filter/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/filter/</guid>
      <description>Function signature func Filter(fn interface{}) S
Arguments    Name Type Description     fn func This function must receive an argument of type the same that the elements in the stream and the output must be bool   
Output    Name Type Description     stream koazee.S It returns the stream modified by the current operation   
Errors    Type Message     err.</description>
    </item>
    
    <item>
      <title>stream.Reduce</title>
      <link>http://wesovilabs.com/koazee/docs/reduce/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/reduce/</guid>
      <description>Function signature func Reduce(fn interface{}) output
Arguments    Name Type Description     fn func This function must receive two arguments, the first argument is an accumulator and the second a element of the same type that the elements in the stream. The output of this function will have the same type than the accumulator    Output    Name Type Description     output stream.</description>
    </item>
    
    <item>
      <title>stream.Map</title>
      <link>http://wesovilabs.com/koazee/docs/map/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/map/</guid>
      <description>Function signature func Map(fn interface{}) output
Arguments    Name Type Description     fn func This function must receive 1 arguments, that must have the same type that current elements in the stream. The output of this function will be the new type op elements in the stream    Output    Name Type Description     stream koazee.S It returns the stream modified by the current operation</description>
    </item>
    
    <item>
      <title>stream.ForEach</title>
      <link>http://wesovilabs.com/koazee/docs/foreach/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/foreach/</guid>
      <description>Function signature func ForEach(fn interface{})
Arguments    Name Type Description     item func This function must receive an argument of type the same that the elements in the stream and it doesn&amp;rsquo;t return any value    Output None
Errors    Type Message     err.items-nil A nil stream can not be used to perform ForEach operation   err.invalid-argument The forEach operation requires a function as argument   err.</description>
    </item>
    
    <item>
      <title>stream.Sort</title>
      <link>http://wesovilabs.com/koazee/docs/sort/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/sort/</guid>
      <description>Function signature func Sor(fn interface{})
Arguments    Name Type Description     item func This function must receive two arguments with the same tup that the elements in the stream and must return an int (-1,0,1) taht will determine which of the two items must be ordered before the other    Output None
Errors    Type Message     err.items-nil A nil stream can not be sorted   err.</description>
    </item>
    
    <item>
      <title>stream.RemoveDuplicates</title>
      <link>http://wesovilabs.com/koazee/docs/removeduplicates/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://wesovilabs.com/koazee/docs/removeduplicates/</guid>
      <description>Function signature func RemoveDuplicates()
Arguments None
Output None
Errors    Type Message     err.items-nil A nil stream can not be iterated  Examples  Numbers   Pointers    package mainimport (&amp;#34;fmt&amp;#34;&amp;#34;github.com/wesovilabs/koazee&amp;#34;)var numbers = []int{1, 1, 9, 3, 5, 7, 9}func main() {fmt.Println(koazee.Stream().With(numbers).RemoveDuplicates().Out().Val())}  package mainimport (&amp;#34;fmt&amp;#34;&amp;#34;github.com/wesovilabs/koazee&amp;#34;)type genre intconst (female genre = iotamale)type primate struct {name stringage intfamily stringgenre genre}func newPrimate(name string, age int, family string, genre genre) *primate {return &amp;amp;primate{name: name,age: age,family: family,genre: genre,}}var primates = []*primate{newPrimate(&amp;#34;John&amp;#34;, 15, &amp;#34;Capuchin&amp;#34;, male),newPrimate(&amp;#34;Laura&amp;#34;, 12, &amp;#34;Squirrel monkey&amp;#34;, female),newPrimate(&amp;#34;Benjamin&amp;#34;, 23, &amp;#34;Spider monkey&amp;#34;, male),newPrimate(&amp;#34;George&amp;#34;, 19, &amp;#34;Golden Lion Tamarin&amp;#34;, male),newPrimate(&amp;#34;Jane&amp;#34;, 33, &amp;#34;Orangutan&amp;#34;, female),newPrimate(&amp;#34;Sarah&amp;#34;, 7, &amp;#34;Gibbon&amp;#34;, female),newPrimate(&amp;#34;George&amp;#34;, 19, &amp;#34;Golden Lion Tamarin&amp;#34;, male),}func main() {primates := koazee.</description>
    </item>
    
  </channel>
</rss>